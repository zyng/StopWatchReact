{"version":3,"sources":["TimeSaved.js","StoperMenu.js","ShowTime.js","App.js","index.js"],"names":["TimeSaved","props","react_default","a","createElement","className","number","time","StoperMenu","style","isStopped","Fragment","onClick","resetClick","stoperClick","saveClick","ShowTime","text","App","state","startTime","stopTime","stoperTimeMiliSeconds","stoperTimeSeconds","stoperTimeMinutes","timeDifference","timeDifferenceResumeAndStop","resumeTime","stopped","measureTime","textTime","_this","stopWatchStartText","textSavedTimes","handleStoper","setState","Date","getTime","handleStopStoper","prevState","textStartBtn","setInterval","handleStartStoper","newTime","Math","floor","concat","functionToStop","clearInterval","handleSaveTime","timeToSave","slice","push","goDownWithList","savedTimesBox","document","getElementById","savedTimeBoxHeight","scrollHeight","scrollTop","handleReset","savedTimesShow","this","map","index","src_TimeSaved","key","src_ShowTime","id","src_StoperMenu","Component","defaultProps","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.13434aea.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst TimeSaved = (props) => {\r\n    return (\r\n        <li className=\"animated  fadeIn\"><i className=\"flaticon-stopwatch\"></i><span className=\"saved-time__title\">Pomiar  {props.number}:</span> <span className=\"saved-time__time\">{props.time}</span></li>\r\n    )\r\n}\r\n\r\nexport default TimeSaved;","import React from 'react';\r\n\r\nconst StoperMenu = (props) => {\r\n    const style = props.isStopped ? \"flaticon-play-button\" : \"flaticon-round-pause-button\";\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"stoper-menu\">\r\n                <button className=\"reset\" onClick={props.resetClick}><i className=\"flaticon-refresh\"></i></button>\r\n                <button className=\"start\" onClick={props.stoperClick}><i className={style}></i></button>\r\n                <button className=\"save\" onClick={props.saveClick}><i className=\"flaticon-stopwatch\"></i></button>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StoperMenu;","import React from 'react';\r\n\r\nconst ShowTime = (props) => {\r\n    return (\r\n        <div className=\"actual-time\">\r\n            <div className=\"actual-time__timer\">{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowTime;","import React, { Component } from 'react';\nimport './css/animate.css';\nimport './style.css';\nimport './font/flaticon.css';\nimport TimeSaved from './TimeSaved';\nimport StoperMenu from './StoperMenu';\nimport ShowTime from './ShowTime';\n\nclass App extends Component {\n  state = {\n    startTime: 0,\n    stopTime: 0,\n    stoperTimeMiliSeconds: 0,\n    stoperTimeSeconds: 0,\n    stoperTimeMinutes: 0,\n    timeDifference: 0,\n    timeDifferenceResumeAndStop: 0,\n    resumeTime: 0,\n    stopped: true,\n    measureTime: '',\n    textTime: this.props.stopWatchStartText,\n    textSavedTimes: [],\n  }\n\n\n  static defaultProps = {\n    stopWatchStartText: \"00:00:00\",\n  }\n\n  handleStoper = () => {\n    let isStopped = !this.state.stopped;\n    this.setState({\n      stopped: isStopped\n    });\n\n    let startTime;\n\n    if (!this.state.startTime) {\n      startTime = new Date().getTime();\n      this.setState({\n        startTime: startTime,\n      });\n    } else {\n      startTime = this.state.startTime;\n    }\n\n    if (isStopped) {\n      this.handleStopStoper(this.state.measureTime);\n    } else {\n      const resumeTime = new Date().getTime();\n      const timeDifferenceResumeAndStop = (startTime === resumeTime) ? 0 : (resumeTime - this.state.stopTime);\n\n      this.setState((prevState) => ({\n        resumeTime: resumeTime,\n        timeDifferenceResumeAndStop: timeDifferenceResumeAndStop,\n        textStartBtn: \"Pauza\",\n        timeDifference: prevState.timeDifference + timeDifferenceResumeAndStop,\n        measureTime: setInterval(this.handleStartStoper, 10)\n      }));\n    }\n  }\n  handleStartStoper = () => {\n\n    const newTime = new Date().getTime() - this.state.timeDifference;\n\n\n    let stoperTimeMiliSeconds = Math.floor(((newTime - this.state.startTime) % 1000) / 10);\n    stoperTimeMiliSeconds = stoperTimeMiliSeconds < 10 ? `0${stoperTimeMiliSeconds}` : stoperTimeMiliSeconds;\n\n    let stoperTimeSeconds = Math.floor(((newTime - this.state.startTime) / (1000)) % 60);\n    stoperTimeSeconds = stoperTimeSeconds < 10 ? `0${stoperTimeSeconds}` : stoperTimeSeconds;\n\n    let stoperTimeMinutes = Math.floor(((newTime - this.state.startTime) / (1000 * 60)) % 60);\n    stoperTimeMinutes = stoperTimeMinutes < 10 ? `0${stoperTimeMinutes}` : stoperTimeMinutes;\n\n    this.setState({\n      stoperTimeMiliSeconds: stoperTimeMiliSeconds,\n      stoperTimeSeconds: stoperTimeSeconds,\n      stoperTimeMinutes: stoperTimeMinutes,\n      textTime: `${stoperTimeMinutes}:${stoperTimeSeconds}:${stoperTimeMiliSeconds}`\n    });\n  }\n\n  handleStopStoper = (functionToStop) => {\n    clearInterval(functionToStop);\n    this.setState({\n      stopTime: new Date().getTime()\n    });\n  }\n\n  handleSaveTime = () => {\n    const timeToSave = this.state.textTime;\n    const textSavedTimes = this.state.textSavedTimes.slice();\n    textSavedTimes.push(timeToSave);\n\n    this.setState({\n      textSavedTimes,\n    });\n\n\n    this.goDownWithList();\n  }\n\n  // ComponentWillUpdate = () => {\n  //   this.goDownWithList();\n  // }\n  // ComponentDidMount = () => {\n  //   this.goDownWithList();\n  // }\n\n  goDownWithList = () => {\n    const savedTimesBox = document.getElementById('times');\n    const savedTimeBoxHeight = savedTimesBox.scrollHeight;\n    savedTimesBox.scrollTop = savedTimeBoxHeight;\n\n  }\n\n  handleReset = () => {\n    this.handleStopStoper(this.state.measureTime);\n\n    this.setState({\n      startTime: 0,\n      stopTime: 0,\n      stoperTimeMiliSeconds: 0,\n      stoperTimeSeconds: 0,\n      stoperTimeMinutes: 0,\n      timeDifference: 0,\n      timeDifferenceResumeAndStop: 0,\n      resumeTime: 0,\n      stopped: true,\n      measureTime: '',\n      textTime: this.props.stopWatchStartText,\n      textSavedTimes: [],\n    });\n  }\n  render() {\n    const savedTimesShow = this.state.textSavedTimes.map((time, index) => <TimeSaved key={index} number={index + 1} time={time} />)\n    return (\n      <React.Fragment>\n\n        <div className=\"stopwatch\">\n          <ShowTime text={this.state.textTime} />\n\n          <ul className=\"saved-time\" id=\"times\" >\n            {savedTimesShow}\n          </ul>\n\n          <StoperMenu stoperClick={this.handleStoper}\n            resetClick={this.handleReset}\n            saveClick={this.handleSaveTime}\n            text={this.state.textStartBtn}\n            isStopped={this.state.stopped}\n          />\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}